version: "3"
volumes:
  volume_database_project:

###> doctrine/doctrine-bundle ###
  database_data:
###< doctrine/doctrine-bundle ###

services:
  mysql:
    image: mysql:8.0
    container_name: project_mysql
    environment:
      MYSQL_ALLOW_EMPTY_PASSWORD: 'true'
      MYSQL_ROOT_PASSWORD: abc123
      MYSQL_DATABASE: marketplace
      MYSQL_USER: marketplace
      MYSQL_PASSWORD: marketplace
    volumes:
      - volume_database_project:/var/lib/mysql
    ports:
      - "3306:3306"

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: project_phpmyadmin
    links:
      - mysql
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_ARBITRARY: 1
    ports:
      - "81:80"

  web:
    build: ./.docker
    container_name: project_web
    volumes:
      - ./:/var/www/html
      - ./.docker/virtualhost.conf:/etc/apache2/sites-available/000-default.conf
      - ./.docker/supervisord.conf:/etc/supervisor/conf.d/supervisord.conf
    ports:
      - "80:80"
    depends_on:
      - mysql

  mailhog:
    image: mailhog/mailhog
    container_name: project_mailhog
    ports:
      - "1025:1025" # smtp server
      - "8025:8025" # web ui

###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
###< doctrine/doctrine-bundle ###
